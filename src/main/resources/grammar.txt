S ::= Program
Program ::= ExtDefList
ExtDefList ::= ExtDefList ExtDef | ε
ExtDef ::= Type VarDec ; | struct ID { DefList } ; | function Type FunDec CompSt | function Type FunDec ; 

BaseType ::= bool | char | int | float | double
Type ::= BaseType | struct ID

DefList ::= DefList Def | ε
Def ::= Type VarDec ; | struct ID { DefList } ;

VarDec ::= ID | VarDec [ INTNUM ]
FunDec ::= ID ( VarList ) | ID ( )
VarList ::= VarList , ParamDec | ParamDec
ParamDec ::= Type VarDec

CompSt ::= { DefList StmtList }
StmtList ::= StmtList Stmt | ε

Stmt ::= Exp ; | ID = Exp ; | L = Exp ; | CompSt | if ( B ) Stmt | if ( B ) Stmt else Stmt | return Exp ; | while ( B ) Stmt | do Stmt while ( B ) ; 
L ::= ID [ Exp ] | L [ Exp ]
Exp ::= Exp + Exp | Exp - Exp | Exp * Exp | Exp / Exp | ( Exp ) | ID | L | INTNUM | REALNUM | STRING | call ID ( ) | call ID ( ParamList )
ParamList ::= ParamList , Exp | Exp
B ::= B || B | B && B | ! B | ( B ) | Exp relop Exp | true | false
relop ::= < | <= | == | != | > | >=

